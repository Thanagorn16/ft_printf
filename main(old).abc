// int	ft_printf(const char *format, ...)
// {
// 	va_list	ptr;
// 	int	i;
// 	int	ret;
// 	int	save;
// 	size_t	len;

// 	i = 0;
// 	len = 0;
// 	ret = 0;
// 	va_start(ptr, format);
// 	while (format[i])
// 	{
// 		if (format[i] == '%')
// 		{
// 			save = ret;
// 			ret = check_specifier(ptr, format[i + 1], save);
// 			if (format[i + 1] == '%')
// 			{
// 				ft_putchar(format[++i]);
// 				ret++;
// 				if (format[i + 1] != '%' && format[i + 1] != '\0')
// 				{
// 					ft_putchar(format[i + 1]);
// 					len++;
// 				}
// 			}
// 			// else if (format[i + 1] != '%')
// 			// {
// 			// 	ft_putchar(format[i]);
// 			// 	len++;
// 			// }
// 		}
// 		else if (format[i] != '%' && format[i - 1] != '%')
// 		{
// 			ft_putchar(format[i]);
// 			len++;
// 		}
// 		i++;
// 	}
// 	// printf("\nlen:%lu\n", len);
// 	// printf("ret:%d\n", ret);
// 	va_end(ptr);
// 	return (ret + len);
// }

// int	ft_printf(const char *format, ...)
// {
// 	va_list	ptr;
// 	int	i;
// 	int	ret;
// 	int	save;
// 	size_t	len;

// 	i = 1;
// 	len = 0;
// 	ret = 0;
// 	va_start(ptr, format);
// 	while (format[i - 1])
// 	{
// 		if (format[i - 1] == '%')
// 		{
// 			save = ret;
// 			// printf("\nhwew:%c\n", format[i]);
// 			ret = check_specifier(ptr, format[i], save);
// 			if (format[i] == '%')
// 			{
// 				ft_putchar(format[i++]);
// 				ret++;
// 				if (format[i] != '%' && format[i] != '\0')
// 				{
// 					ft_putchar(format[i]);
// 					len++;
// 				}
// 			}
// 		}
// 		// else if (format[i - 1] != '%' && format[i] != '%')
// 		else if (format[i - 1] != '%')
// 		{
// 			if (format[i] == '%')
// 				ft_putchar(format[i - 1]);
// 			else
// 			{
// 				if (format[i + 1] == '%')
// 				{
// 					ft_putchar(format[i]);
// 					len++;
// 					i++;
// 				}
// 				else
// 				{
// 					ft_putchar(format[i]);
// 					len++;
// 				}
// 					// ft_putchar(format[i]);
// 			}
// 				// ft_putchar(format[i]);
// 			// len++;
// 		}
// 		i++;
// 	}
// 	// printf("\nlen:%lu\n", len);
// 	// printf("ret:%d\n", ret);
// 	va_end(ptr);
// 	return (ret + len);
// }
